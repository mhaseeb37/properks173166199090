<style>
 .product-variant-picker__option-label *{
   color:#383838;
   
 }
  #size-guide-trigger{
    text-decoration:underline;
  }
  .product-stock__label {
    font-weight:500!Important;
    color:#383838;
  }
  .product-quantity__label{
     color:#383838;
  }
  .custom-fontweight-pdp {
    font-size:16px;
  }
  .product-information-tag--solid{
    padding:2rem 2.3rem
  }
  @media screen and (max-width: 768px){
    .product-information-tag--solid{
          padding: 1.3rem 1.3rem;
    }
  }
  </style>
{%- liquid
  assign swatch_patterns = settings.primary_custom_colors_and_patterns
  if is_primary_swatch == false
    assign swatch_patterns = settings.secondary_custom_colors_and_patterns
  endif

  assign primary_custom_colors_and_patterns = swatch_patterns | newline_to_br | split: '<br />'
  assign enable_darken_mode = settings.enable_product_darken_background

  assign current_color_scheme = 'default'
  assign target_color_scheme = section.settings.color_scheme
  assign option_name_downcase = option.name | downcase

  assign block_option_name_downcase = block.settings.option_name | downcase
  assign information_drawer_button_label = block.settings.information_drawer_button_label

  if section.settings.color_scheme == 'default'
    assign target_color_scheme = settings.default_color_scheme
  endif

  case target_color_scheme
    when 'primary'
      assign current_color_scheme = 'primary'
    when 'secondary'
      assign current_color_scheme = 'secondary'
    when 'custom-1'
      assign current_color_scheme = 'custom_1'
    when 'custom-2'
      assign current_color_scheme = 'custom_2'
    when 'custom-3'
      assign current_color_scheme = 'custom_3'
  endcase

  assign key = current_color_scheme | append: '_background_color'
  assign section_background_color = settings[key] | downcase
-%}

{% if color_option_picker_type contains 'button' %}
  <div class='product-variant-picker__option-label'>
    <span class='heading-font-family'>{{ option.name }}</span>

    {%- if block_option_name_downcase == option_name_downcase -%}
      <sidebar-button>
        <button
          data-sidebar-button
          data-sidebar-id='product-variant-picker-popup-{{ product.id }}-{{ sectionId }}'
          class='unstyled-button product-variant-picker__popup-toggle'
          type='button'
        >
          <span>{{ information_drawer_button_label }}</span>
        </button>
      </sidebar-button>
    {%- endif -%}
  </div>
  <div class='product-variant-picker__pill-list {% if is_primary_swatch %} theme-with-size{{ settings.primary_size_for_product_pages }}-swatch-in-product-section{% else %} theme-with-size{{ settings.secondary_size_for_product_pages }}-swatch-in-product-section{% endif %}'>
    {%- for value in option.values -%}
      {%- liquid
        assign color_downcase = value | downcase | strip

        assign is_image = false
        assign selected_color_value = color_downcase

        for pattern in primary_custom_colors_and_patterns
          assign config = pattern | split: '::'
          assign pattern_label_downcase = config[0] | downcase | strip
          assign pattern_value = config[1]

          if pattern_label_downcase == color_downcase
            unless pattern_value contains 'http'
              if pattern_value contains '.png' or pattern_value contains '.jp'
                assign selected_color_value = pattern_value

                assign is_image = true
              endif
            endunless
          endif
        endfor
      -%}

      <label
        for='{{ sectionId }}-{{ product.id }}-{{ option.position }}-{{ forloop.index0 }}'
        class='pill pill--large pill--with-color-swatch-in-product-section {% if option.selected_value == value %} selected {% endif %} {% if color_option_picker_type == 'button-outline' %}pill--outline{% endif %} {% if color_option_picker_type == 'button-solid' %}pill--solid{% endif %} {% if color_option_picker_type == 'button-underline' %}pill--underline{% endif %}'
        {% if option.selected_value == value %}
          tabindex='0'
        {% endif %}
      >
        <shape-swatch
          data-color='{{ value }}'
          data-section-background='{{ section_background_color | strip }}'
          data-colors-patterns='{{ primary_custom_colors_and_patterns }}'
          class='color-swatch pill__color-swatch {% if is_primary_swatch %} {% if settings.primary_shape_for_product_pages == 'round' %} color-swatch--round {% else %} color-swatch--square {% endif %} {% else %} {% if settings.secondary_shape_for_product_pages == 'round' %} color-swatch--round {% else %} color-swatch--square {% endif %} {% endif %}'
          style='{% if is_image %} --gsc-color-swatch-value: url({{ selected_color_value | file_img_url: "200x" }}); {% endif %}'
          {% if is_image %}
            is-image
          {% endif %}
        ></shape-swatch>
        <span class='pill__label'>{{ value }}</span>
      </label>
    {%- endfor -%}
  </div>
{% elsif color_option_picker_type contains 'dropdown' %}
  {%- liquid
    assign color_downcase = option.selected_value | downcase | strip

    assign is_image = false
    assign selected_color_value = color_downcase

    for pattern in primary_custom_colors_and_patterns
      assign config = pattern | split: '::'
      assign pattern_label_downcase = config[0] | downcase | strip
      assign pattern_value = config[1]

      if pattern_label_downcase == color_downcase
        unless pattern_value contains 'http'
          if pattern_value contains '.png' or pattern_value contains '.jp'
            assign selected_color_value = pattern_value

            assign is_image = true
          endif
        endunless
      endif
    endfor
  -%}

  <div class='product-variant-picker__option-label'>
    <span class='heading-font-family'>{{ option.name }}</span>

    {%- if block_option_name_downcase == option_name_downcase -%}
      <sidebar-button>
        <button
          data-sidebar-button
          data-sidebar-id='product-variant-picker-popup-{{ product.id }}-{{ sectionId }}'
          class='unstyled-button product-variant-picker__popup-toggle'
          type='button'
        >
          <span>{{ information_drawer_button_label }}</span>
        </button>
      </sidebar-button>
    {%- endif -%}
  </div>
  <dropdown-opener
    class='variant-picker-dropdown__toggle variant-picker-dropdown__toggle--with-color-swatch {% if color_option_picker_type == 'dropdown-underline' %} variant-picker-dropdown__toggle--underline {% elsif color_option_picker_type == 'dropdown-outline' %} variant-picker-dropdown__toggle--outline {% elsif color_option_picker_type == 'dropdown-solid' %} variant-picker-dropdown__toggle--solid {% endif %}'
    data-aria-expanded='false'
    data-float-element-id='variant-picker-dropdown-{{ sectionId }}-{{ product.id }}-{{ option.position }}-{{ forloop.index0 }}'
    data-trigger='click'
    tabindex='0'
  >
    <div class='variant-picker-dropdown__toggle-label' data-dropdown-variant-picker-label>
      <shape-swatch
        data-color='{{ option.selected_value }}'
        data-section-background='{{ section_background_color | strip }}'
        data-colors-patterns='{{ primary_custom_colors_and_patterns }}'
        class='color-swatch variant-picker-dropdown__color-swatch {% if is_primary_swatch %} {% if settings.primary_shape_for_product_pages == 'round' %} color-swatch--round {% else %} color-swatch--square {% endif %} {% else %} {% if settings.secondary_shape_for_product_pages == 'round' %} color-swatch--round {% else %} color-swatch--square {% endif %} {% endif %}'
        style='{% if is_image %} --gsc-color-swatch-value: url({{ option.selected_value | file_img_url: "200x" }}); {% endif %}'
        {% if is_image %}
          is-image
        {% endif %}
      ></shape-swatch>
      <span>{{ option.selected_value }}</span>
    </div>
    {%- render 'icon', icon_name: 'chevron', class: 'variant-picker-dropdown__chevron' -%}
  </dropdown-opener>
  <float-element
    class='variant-picker-dropdown {% if color_option_picker_type == 'dropdown-underline' %} variant-picker-dropdown--underline {% endif %}'
    aria-hidden='true'
    id='variant-picker-dropdown-{{ sectionId }}-{{ product.id }}-{{ option.position }}-{{ forloop.index0 }}'
    data-placement='bottom-start'
    data-main-axis-offset='{% if settings.round_level != "0" %} 8{% else %} 0{% endif %}'
  >
    <template data-float-element-template='variant-picker-dropdown-{{ sectionId }}-{{ product.id }}-{{ option.position }}-{{ forloop.index0 }}'>
      <div class='variant-picker-dropdown__body'>
        {%- for value in option.values -%}
          {%- liquid
            assign color_downcase = value | downcase | strip

            assign is_image = false
            assign selected_color_value = color_downcase

            for pattern in primary_custom_colors_and_patterns
              assign config = pattern | split: '::'
              assign pattern_label_downcase = config[0] | downcase | strip
              assign pattern_value = config[1]

              if pattern_label_downcase == color_downcase
                unless pattern_value contains 'http'
                  if pattern_value contains '.png' or pattern_value contains '.jp'
                    assign selected_color_value = pattern_value

                    assign is_image = true
                  endif
                endunless
              endif
            endfor
          -%}

          <label
            class='variant-picker-dropdown__item variant-picker-dropdown__item--with-color-swatch {% if option.selected_value == value %} selected {% endif %}'
            for='{{ sectionId }}-{{ product.id }}-{{ option.position }}-{{ forloop.index0 }}'
            tabindex='0'
            data-focus-trap-target
          >
            <shape-swatch
              data-color='{{ value }}'
              data-section-background='{{ section_background_color | strip }}'
              data-colors-patterns='{{ primary_custom_colors_and_patterns }}'
              class='color-swatch variant-picker-dropdown__color-swatch {% if is_primary_swatch %} {% if settings.primary_shape_for_product_pages == 'round' %} color-swatch--round {% else %} color-swatch--square {% endif %} {% else %} {% if settings.secondary_shape_for_product_pages == 'round' %} color-swatch--round {% else %} color-swatch--square {% endif %} {% endif %}'
              style='{% if is_image %} --gsc-color-swatch-value: url({{ selected_color_value | file_img_url: "200x" }}); {% endif %}'
              {% if is_image %}
                is-image
              {% endif %}
            ></shape-swatch>
            <span>{{ value }}</span>
          </label>
        {%- endfor -%}
      </div>
    </template>
  </float-element>
{% else %}
  <color-swatches-picker>
    <div class='product-variant-picker__option-label'>
      <span class='heading-font-family'>{{ option.name }}</span>

      <span
        class='truncate product-variant-picker__option-active-color body-color'
        data-color-swatches-picker-active-value
      >
        {{- option.selected_value -}}
      </span>

      {%- if block_option_name_downcase == option_name_downcase -%}
        <sidebar-button>
          <button
            data-sidebar-button
            data-sidebar-id='product-variant-picker-popup-{{ product.id }}-{{ sectionId }}'
            class='unstyled-button product-variant-picker__popup-toggle'
            type='button'
          >
            <span>{{ information_drawer_button_label }}</span>
          </button>
        </sidebar-button>
      {%- endif -%}
    </div>

    {% if color_option_picker_type == 'swatches' %}
      <div class='product-variant-picker__shape-swatches {% if is_primary_swatch %} theme-with-size{{ settings.primary_size_for_product_pages }}-swatch-in-product-section{% else %} theme-with-size{{ settings.secondary_size_for_product_pages }}-swatch-in-product-section{% endif %}'>
        {%- for value in option.values -%}
          {% if value.swatch != blank %}
            {%- liquid
              assign color_downcase = value.swatch.color
              assign image_url = value.swatch.image

              assign is_image = false
              assign selected_color_value = color_downcase

              if image_url != blank
                assign is_image = true
                assign selected_color_value = image_url | replace: 'files/', '' | replace: 'products/', ''
              endif
            -%}

          {% else %}
            {%- liquid
              assign color_downcase = value | downcase | strip

              assign is_image = false
              assign selected_color_value = color_downcase

              for pattern in primary_custom_colors_and_patterns
                assign config = pattern | split: '::'
                assign pattern_label_downcase = config[0] | downcase | strip
                assign pattern_value = config[1]

                if pattern_label_downcase == color_downcase
                  unless pattern_value contains 'http'
                    if pattern_value contains '.png' or pattern_value contains '.jp'
                      assign selected_color_value = pattern_value

                      assign is_image = true
                    endif
                  endunless
                endif
              endfor
            -%}
          {% endif %}

          <div>
            <label
              for='{{ sectionId }}-{{ product.id }}-{{ option.position }}-{{ forloop.index0 }}'
              class='color-swatch-select-parent {% if option.selected_value == value %} selected {% endif %}'
              {% if option.selected_value == value %}
                tabindex='0'
              {% endif %}
              data-focus-trap-target
              data-color-swatches-picker-label
              data-value='{{ value | escape }}'
            >
              <shape-swatch
                data-color='{{ color_downcase }}'
                data-section-background='{{ section_background_color | strip }}'
                data-colors-patterns='{{ primary_custom_colors_and_patterns }}'
                class='color-swatch {% if is_primary_swatch %} color-swatch--{{ settings.primary_shape_for_product_pages }}{% else %} color-swatch--{{ settings.secondary_shape_for_product_pages }}{% endif %}'
                style='{% if is_image %} --gsc-color-swatch-value: url({{ selected_color_value | file_img_url: "200x" }}); {% endif %}'
                {% if is_image %}
                  is-image
                {% endif %}
              >
                <div class='color-swatch__line'></div>
              </shape-swatch>
            </label>
          </div>
        {%- endfor -%}
      </div>
    {% else %}
      <div class='image-swatches product-variant-picker__image-swatches {% if is_primary_swatch %} theme-with-size{{ settings.primary_size_for_product_pages }}-swatch-in-product-section{% else %} theme-with-size{{ settings.secondary_size_for_product_pages }}-swatch-in-product-section{% endif %}'>
        {%- for value in option.values -%}
          {% liquid
            assign option_label = 'option' | append: option.position
            assign variant = product.variants | where: option_label, value | first
          %}

          <div>
            <label
              for='{{ sectionId }}-{{ product.id }}-{{ option.position }}-{{ forloop.index0 }}'
              class='image-swatches__item {% if is_primary_swatch %} image-swatches__item--{{ settings.primary_shape_for_product_pages }}{% else %} image-swatches__item--{{ settings.secondary_shape_for_product_pages }}{% endif %}  {% if option.selected_value == value %} selected {% endif %}'
              {% if option.selected_value == value %}
                tabindex='0'
              {% endif %}
              data-focus-trap-target
              data-color-swatches-picker-label
              data-value='{{ value | escape }}'
            >
              {%- if variant.image.src != blank -%}
                <div class='image-swatches__item-body-wrapper custom-padding-pdp{% if enable_darken_mode %} multiply-mode{% endif %} {% if is_primary_swatch %} image-swatches__item-body-wrapper--{{ settings.primary_shape_for_product_pages }} {% else %} image-swatches__item-body-wrapper--{{ settings.secondary_shape_for_product_pages }} {% endif %} '>
                  <img
                    {% render 'image-attributes',
                      image: variant.image,
                      size: 'small',
                      is_multiply_target: enable_darken_mode,
                      class: 'image-swatches__item-body'
                    %}
                  >
                  <div class='image-swatches__item-line'></div>
                </div>

              {%- else -%}
                <div class='image-swatches__item-body-wrapper {% if is_primary_swatch %} image-swatches__item-body-wrapper--{{ settings.primary_shape_for_product_pages }} {% else %} image-swatches__item-body-wrapper--{{ settings.secondary_shape_for_product_pages }} {% endif %}'>
                  {% render 'icon-color-image-placeholder', class: 'image-swatches__item-body' %}
                </div>
              {%- endif -%}
            </label>
          </div>
        {%- endfor -%}
      </div>
    {% endif %}
  </color-swatches-picker>
{% endif %}

<style>
  .image-swatches__item.selected{
    border-radius: none !important;
    background-color:white !important;
    border: none !important;
    box-shadow:none !important;
  }
</style>